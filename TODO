====
TODO
====

kay.i18n
---------

* ポータビリティの確認

* manage.py でできるようにする

kay.utils.forms
----------------

* Media (javascript など) を書けると良いかな...

 * AjaxModelField みたいなのを作る

* ModelField の実装

 * 自動で選択肢をキャッシュするようにする


kay.auth
---------------

* user 認証をどうするか。抽象化したユーザクラスが要りそう

 * 独自の認証を使いたい場合も

  * 独自認証の場合 https 使う場合にはログイン画面でドメインが変わる事もある

    その場合はドメインが変わる時に内部でランダムストリングを発行してや
    り取りするか


kay
----

* manage.py で dumpdata と loaddata を作る

* manage.py で国際化メッセージの処理をできるようにする


babel
-----

* None

====
DONE
====

kay.i18n
---------

* もう少し汎用化する。具体的には複数のアプリケーションにも対応したり、
  そんなところ。

* kay 自体も extract の対象に入れようよ

* i18n を 無効にできるようにした


kay
----

* もっとフレームワークぽく

 * app.py とか書かないで済むようにとか

 * ミドルウェアをプラグイン

 * 本番環境でエラーが出たらアドミンにメール

 * Anonymous Session を middleware にする

 * manage.py にいろいろ機能を足していく。

  * runserver
  * shell で datastore 触れるように

 * アプリケーションのマウント方法は二種類あると良いな。

  * django のように urls.py でくっつけるだけの奴とWSGIApplication 自体
    別のインスタンスを作ってディスパッチする奴


kay.auth
--------

 * Google Account 使うケース


kay.utils.forms
----------------

* FileField

* ModelField の実装

 * 件数について制限とか必要かな。query を指定できるようにした。

* テスト書く


kay.middleware.session
-----------------------

* セッションの有効期間をセットする。


babel
-----

* localedata 以下にファイルがいっぱいある。そのうちなんとかしないと。

 * 多分 zip して localedata.py をほげほげすればいける

* num_plurals の判定がおかしくて、日本語のメッセージが fuzzy になる件

 * とりあえず手パッチをあてて対処してある。後でなんとかする。

   /opt/local/lib/python2.5/site-packages/babel/messages/catalog.py の _merge 
   -> babel も bundle したので良いかな
